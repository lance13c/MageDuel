<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_Player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

if (keyboard_CheckMaps_Held(JUMP_KEY)){
    phy_speed_y = -1*playerSpeed;
    //physics_apply_local_force(_Player_Center_X,_Player_Center_Y,_Player_Center_X,_Player_Center_Y + -1*_Player_Movement_Force);
}
if (keyboard_CheckMaps_Held(LEFT_KEY)){
    phy_speed_x = -1* playerSpeed;
    //physics_apply_local_force(_Player_Center_X,_Player_Center_Y,_Player_Center_X + -1*_Player_Movement_Force,_Player_Center_Y);
}
if (keyboard_CheckMaps_Held(DOWN_KEY)){
    //phy_speed_y = _Player_Movement_Speed;
   physics_apply_local_force(_Player_Center_X,_Player_Center_Y,_Player_Center_X,_Player_Center_Y + 1*_Player_Movement_Force);
}
if (keyboard_CheckMaps_Held(RIGHT_KEY)){
    phy_speed_x = playerSpeed;
    //physics_apply_local_force(_Player_Center_X,_Player_Center_Y,_Player_Center_X  + _Player_Movement_Force,_Player_Center_Y);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Spell Activation when there is an activeSpell
if (activeSpell != ""){
    // Getting the method names
    var create =  activeSpell + "_create";
    var active = activeSpell + "_active"
    var destroy = activeSpell + "_destroy"
    
    // Assigning the methods from the method names
    var scr_create = asset_get_index(create);
    var scr_active = asset_get_index(active);
    var scr_destroy = asset_get_index(destroy);
    
    
    
    if (device_mouse_check_button_pressed(0,mb_left)){
        var dir = point_direction(x,y,mouse_x,mouse_y); // direction middle of curve is
        script_execute(scr_create,dir);
    }
    if (device_mouse_check_button(0,mb_left)){
        var dir = point_direction(x,y,mouse_x,mouse_y);
        script_execute(scr_active,dir);
    }
    if (device_mouse_check_button_released(0,mb_left)){
        script_execute(scr_destroy);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Aux and ActiveSpellIndex Controls

if (!device_mouse_check_button(0,mb_left)){ // This makes it so the spell activation does not get messed up
    // Mouse Wheel, changeds activeSpellIndex
    if (keyboard_CheckMaps_Held(TOGGLE_SPELL_FORWARD)){
        if (activeSpellIndex &gt;= maxSpells-1){
            activeSpellIndex = 0;
        }else{
            activeSpellIndex += 1;
        }
    }
    if (keyboard_CheckMaps_Held(TOGGLE_SPELL_BACKWARD)){
        if (activeSpellIndex &lt;= 0){
            activeSpellIndex = maxSpells-1;
        }else{
            activeSpellIndex -= 1;
        }
    }   
}

//Sets the current spell
activeSpell = spellsKnown[activeSpellIndex];

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>22,10</point>
    <point>42,10</point>
    <point>42,60</point>
    <point>22,60</point>
  </PhysicsShapePoints>
</object>
