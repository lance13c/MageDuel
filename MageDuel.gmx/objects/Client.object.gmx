<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setting Up Client
data = ds_list_create();

client = network_create_socket(network_socket_tcp);
buff = buffer_create( 256, buffer_grow, 1);

buffer_seek(buff, buffer_seek_start, 0);
buffer_write(buff, buffer_s16, 3);
network_send_packet( client, buff, buffer_tell(buff));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Network Client Controls

var eventid = ds_map_find_value(async_load, "id");
if ( client == eventid){
    var buff = ds_map_find_value(async_load, "buffer");
    sprites = buffer_read(buff, buffer_u32);
    
    ds_list_clear(data);
    for(var i=0;i&lt;sprites;i++){
        ds_list_add(data, buffer_read(buff,buffer_s16)); //x
        ds_list_add(data, buffer_read(buff,buffer_s16)); //y
        ds_list_add(data, buffer_read(buff,buffer_s16)); //sprite_index
        ds_list_add(data, buffer_read(buff,buffer_s16)); //image_index
        ds_list_add(data, buffer_read(buff,buffer_s16)); //image_blend
        ds_list_add(data, buffer_read(buff,buffer_s16)); //player name  
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing Network Players
if (!ds_list_empty(data)){
    var index = 0;
    for(i=0;i&lt;sprites;i++){
        var xx,yy,sp,spindex,col;
        xx = ds_list_find_value(data,index++);
        yy = ds_list_find_value(data,index++);
        sp = ds_list_find_value(data,index++);
        spindex = ds_list_find_value(data,index++);
        col = ds_list_find_value(data,index++);
        name = ds_list_find_value(data,index++);
        
        draw_sprite_ext(sp,spindex,xx,yy,1,1,0,col,1.0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>2,2</point>
    <point>2,2</point>
  </PhysicsShapePoints>
</object>
